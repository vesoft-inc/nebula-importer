name: release

on:
  release:
    types:
      - published

jobs:
  package:
    name: package and upload release assets
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        os:
          - linux
          - darwin
          - windows
        arch:
          - amd64
          - arm64
          - arm
        exclude:
          - os: darwin
            arch: arm
          - os: windows
            arch: arm64
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v1
        with:
          go-version: 1.16.4
      - name: set package name
        id: package-name
        run: |
          output_name=nebula-importer-${{ matrix.os }}-${{ matrix.arch }}-${GITHUB_REF#refs/tags/}
          if [ "${{ matrix.os }}" = "windows"  ]; then
              output_name+='.exe'
          fi
          echo "::set-output name=package_name::$output_name"
      - name: build
        env:
          GOOS: ${{ matrix.os }}
          GOARCH: ${{ matrix.arch }}
          CGO_ENABLED: 0
        run: |
          cd cmd
          go build -o ../${{ steps.package-name.outputs.package_name }}
      - name: upload release asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./${{ steps.package-name.outputs.package_name }}
          asset_name: ${{ steps.package-name.outputs.package_name }}
          asset_content_type: application/octet-stream

  docker:
    name: build docker image
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Build and push Docker images
        uses: docker/build-push-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          repository: vesoft/nebula-importer
          tags: latest
          tag_with_ref: true
          add_git_labels: true
